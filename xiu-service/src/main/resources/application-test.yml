#配置文件加载顺序: logback.xml--->application.properties--->logback-spring.xml
server:
  port: 3002
  tomcat:
    basedir: /opt/services/xiu/xiu-service
    accesslog:
      enabled: true
      directory: logs
eureka:
  instance:
    #将IP注册到Eureka Server上，而如果不配置就是机器的主机名
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}
  client:
    service-url:
      defaultZone: http://vick:success@localhost:3000/eureka/
logging:
  #logging.level.root的级别会覆盖logback-spring.xml中定义的root的级别
  #logback-spring.xml会覆盖logging.file.path 所以要集中到一处进行配置
  #file:
    #path: logs/xiu-service
  level:
    #root: INFO
    #swagger日志级别
    io.swagger.models.parameters.AbstractSerializableParameter: ERROR
  config: classpath:logback-spring-${spring.profiles.active}.xml
spring:
  application:
    name: xiu-service
  #数据源配置信息
  datasource:
    #自定义quartz数据源
    test-quartz:
      jdbc-url: jdbc:mysql://localhost:3306/quartz?useUnicode=true&useSSL=false&serverTimezone=GMT%2B8
      username: root
      password: success
    #默认数据源基本配置信息
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/xiu?useUnicode=true&useSSL=false&serverTimezone=GMT%2B8
    jdbc-url: jdbc:mysql://localhost:3306/xiu?useUnicode=true&useSSL=false&serverTimezone=GMT%2B8
    username: root
    password: success
    #如果是多数据源,则schema作用于哪个数据源的规刚是:
    #1.若无@Configuration load DataSource，则作用于默认数据源,即spring.datasource.url配置的数据库
    #2.若@Configuration类只load一个DataSource,则schema作用于该dataSource的数据库
    #3.若@Configuration只load一个以上的DataSource,则必须有一个DataSource带有@Primary注解,并且schema作用于该primary DataSource
    #scheme的sql文件中不能带#注释,否则抛出错误
    schema: classpath:tables_mysql_innodb.sql
    #org/quartz/impl/jdbcjobstore/tables_mysql_innodb.sql 文件有注释,在springboot中不能执行
    #schema: classpath:org/quartz/impl/jdbcjobstore/tables_mysql_innodb.sql
    #initialization-mode: 第一次用always 以后用never 否则表会被删除重建
    initialization-mode: never
    continue-on-error: false
    sql-script-encoding: utf-8
    separator: ;
    #默认数据源所用连接池"type: com.alibaba.druid.pool.DruidDataSource"—druid连接池配置
    druid:
      ## 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      ## 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      use-global-data-source-stat: true
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 配置监控服务器
      stat-view-servlet:
        enabled: true
        login-username: admin
        login-password: admin
        #是否能够重置数据
        reset-enable: false
        url-pattern: /druid/*
        # 添加IP白名单
        allow: 127.0.0.1
        # 添加IP黑名单，当白名单和黑名单重复时，黑名单优先级更高
        #deny:
      web-stat-filter:
        enabled: false
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤格式
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
    #spring默认连接池为HikariCP,因为quartz数据源没指定连接池,所以quartz数据源的数据库连接池为HikariCP
    hikari:
      minimum-idle: 5
      maximum-pool-size: 10
      connection-init-sql: SELECT 1 FROM DUAL
  #定时任务配置信息
  quartz:
    #auto-startup: true 自动调用QuartzScheduler.start()
    auto-startup: true
    job-store-type: jdbc #数据库方式
    properties:
      org:
        quartz:
          scheduler:
            instanceId: AUTO #默认主机名和时间戳生成实例ID,可以是任何字符串，但对于所有调度程序来说，必须是唯一的 对应qrtz_scheduler_state INSTANCE_NAME字段
            #instanceName: clusteredScheduler #quartzScheduler
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX #持久化配置
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate #我们仅为数据库制作了特定于数据库的代理
            useProperties: false #以指示JDBCJobStore将JobDataMaps中的所有值都作为字符串，因此可以作为名称 - 值对存储而不是在BLOB列中以其序列化形式存储更多复杂的对象。从长远来看，这是更安全的，因为您避免了将非String类序列化为BLOB的类版本问题。
            tablePrefix: qrtz_  #数据库表前缀
            misfireThreshold: 60000 #在被认为“失火”之前，调度程序将“容忍”一个Triggers将其下一个启动时间通过的毫秒数。默认值（如果您在配置中未输入此属性）为60000（60秒）。
            clusterCheckinInterval: 5000 #设置此实例“检入”*与群集的其他实例的频率（以毫秒为单位）。影响检测失败实例的速度。
            isClustered: true #打开群集功能
          threadPool: #连接池
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 3
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true
mybatis-plus:
  # 指定sql映射文件位置
  mapper-locations: classpath:mapper/*.xml
  global-config:
    id-type: 0
    #驼峰下划线转换
    db-column-underline: true
  #打印SQL
  #configuration:
    #log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
swagger2:
  #开发环境用true，生产环境上禁止swagger，用false
  enable: false